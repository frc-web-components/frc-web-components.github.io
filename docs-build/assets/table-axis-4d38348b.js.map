{"version":3,"file":"table-axis-4d38348b.js","sources":["../../src/elements/frc-elements/base-elements/bar.js","../../src/elements/frc-elements/base-elements/table-axis.js"],"sourcesContent":["import { LitElement, html, css } from 'lit';\r\n\r\nexport const elementName = 'frc-bar';\r\n\r\nexport const elementConfig = {\r\n  dashboard: {\r\n    topLevel: false,\r\n    displayName: 'Bar',\r\n  },\r\n  properties: {\r\n    value: { type: Number },\r\n    min: { type: Number, defaultValue: -1 },\r\n    max: { type: Number, defaultValue: 1 },\r\n    center: { type: Number },\r\n  },\r\n};\r\n\r\nfunction clamp(value, min, max) {\r\n  return Math.min(max, Math.max(value, min));\r\n}\r\n\r\nclass Bar extends LitElement {\r\n  static properties = elementConfig.properties;\r\n\r\n  static styles = css`\r\n    :host {\r\n      display: inline-block;\r\n      position: relative;\r\n      width: 300px;\r\n      height: 20px;\r\n      background: var(--frc-bar-background, #ddd);\r\n      color: var(--frc-bar-color, black);\r\n      font-size: 15px;\r\n      line-height: 18px;\r\n      text-align: center;\r\n    }\r\n\r\n    [part='dragger'] {\r\n      position: absolute;\r\n      top: 0;\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n    [part='foreground'] {\r\n      position: absolute;\r\n      top: 0;\r\n      height: 100%;\r\n      background: var(--frc-bar-foreground, lightblue);\r\n      border-radius: 3px;\r\n      width: var(--foreground-width);\r\n      left: var(--foreground-left);\r\n      right: var(--foreground-right);\r\n      pointer-events: none;\r\n    }\r\n\r\n    .content {\r\n      position: relative;\r\n    }\r\n  `;\r\n\r\n  constructor() {\r\n    super();\r\n    this.value = 0;\r\n    this.min = -1;\r\n    this.max = 1;\r\n    this.center = 0;\r\n    this.dragging = false;\r\n  }\r\n\r\n  get min() {\r\n    return Math.min(this._min, this._max);\r\n  }\r\n\r\n  set min(value) {\r\n    const oldValue = this._min;\r\n    this._min = value;\r\n    this.requestUpdate('min', oldValue);\r\n  }\r\n\r\n  get max() {\r\n    return Math.max(this._min, this._max);\r\n  }\r\n\r\n  set max(value) {\r\n    const oldValue = this._max;\r\n    this._max = value;\r\n    this.requestUpdate('max', oldValue);\r\n  }\r\n\r\n  updateForeground() {\r\n    const { min, max, center, value } = this;\r\n    const val = clamp(value, min, max);\r\n\r\n    const foreground = this.shadowRoot.querySelector('[part=foreground]');\r\n\r\n    if (max < center) {\r\n      foreground.style.setProperty(\r\n        '--foreground-width',\r\n        (Math.abs(val - max) / (max - min)) * 100 + '%'\r\n      );\r\n      foreground.style.setProperty('--foreground-left', 'auto');\r\n      foreground.style.setProperty('--foreground-right', '0');\r\n    } else if (min > center) {\r\n      foreground.style.setProperty(\r\n        '--foreground-width',\r\n        (Math.abs(val - min) / (max - min)) * 100 + '%'\r\n      );\r\n      foreground.style.setProperty('--foreground-left', '0');\r\n      foreground.style.setProperty('--foreground-right', 'auto');\r\n    } else if (val > center) {\r\n      foreground.style.setProperty(\r\n        '--foreground-width',\r\n        (Math.abs(val - center) / (max - min)) * 100 + '%'\r\n      );\r\n      foreground.style.setProperty(\r\n        '--foreground-left',\r\n        (Math.abs(min - center) / (max - min)) * 100 + '%'\r\n      );\r\n      foreground.style.setProperty('--foreground-right', 'auto');\r\n    } else {\r\n      foreground.style.setProperty(\r\n        '--foreground-width',\r\n        (Math.abs(val - center) / (max - min)) * 100 + '%'\r\n      );\r\n      foreground.style.setProperty('--foreground-left', 'auto');\r\n      foreground.style.setProperty(\r\n        '--foreground-right',\r\n        (Math.abs(max - center) / (max - min)) * 100 + '%'\r\n      );\r\n    }\r\n  }\r\n\r\n  resized() {\r\n    this.updateForeground();\r\n  }\r\n\r\n  updated() {\r\n    this.updateForeground();\r\n  }\r\n\r\n  setDragPosition(ev) {\r\n    const { left, width } = this.getBoundingClientRect();\r\n    const x = ev.clientX - left;\r\n    const dragPosition = clamp(x / width, 0, 1);\r\n    const value = this.min + (this.max - this.min) * dragPosition;\r\n\r\n    const event = new CustomEvent('barDrag', {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: { value },\r\n    });\r\n\r\n    this.dispatchEvent(event);\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.setAttribute('draggable', 'false');\r\n\r\n    window.addEventListener('mousemove', (ev) => {\r\n      if (!this.dragging) {\r\n        return;\r\n      }\r\n\r\n      this.setDragPosition(ev);\r\n    });\r\n\r\n    window.addEventListener('mouseup', (ev) => {\r\n      this.dragging = false;\r\n    });\r\n  }\r\n\r\n  onMouseDown(ev) {\r\n    this.dragging = true;\r\n    this.setDragPosition(ev);\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div part=\"foreground\" draggble=\"false\"></div>\r\n      <div class=\"content\" draggable=\"false\">\r\n        <slot></slot>\r\n      </div>\r\n      <div part=\"dragger\" @mousedown=\"${this.onMouseDown}\"></div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define(elementName, Bar);\r\n","import { LitElement, html, css } from 'lit';\r\nimport * as d3 from 'd3';\r\n\r\nexport const elementName = 'frc-table-axis';\r\n\r\nexport const elementConfig = {\r\n  dashboard: {\r\n    topLevel: false,\r\n    displayName: 'Table Axis',\r\n  },\r\n  properties: {\r\n    vertical: { type: Boolean },\r\n    ticks: { type: Number },\r\n    range: { type: Array },\r\n    unit: { type: String },\r\n  },\r\n};\r\n\r\nclass TableAxis extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n    }\r\n\r\n    :host([vertical]) {\r\n      height: 100%;\r\n    }\r\n\r\n    :host(:not([vertical])) {\r\n      width: 100%;\r\n    }\r\n\r\n    svg {\r\n      overflow: visible;\r\n    }\r\n\r\n    line {\r\n      stroke: rgb(150, 150, 150);\r\n      stroke-width: 2;\r\n    }\r\n\r\n    text {\r\n      font-weight: normal;\r\n      font-size: 13px;\r\n      fill: var(--frc-tab-axis-text-color, #000);\r\n    }\r\n  `;\r\n\r\n  static properties = elementConfig.properties;\r\n\r\n  constructor() {\r\n    super();\r\n    this.prevSize = 0;\r\n    this.prevTicks = 0;\r\n    this.prevMin = null;\r\n    this.prevMax = null;\r\n\r\n    // defaults\r\n    this.vertical = false;\r\n    this.ticks = 0;\r\n    this.range = [];\r\n    this.unit = '';\r\n  }\r\n\r\n  setAxis(changedProps) {\r\n    let size = this.vertical ? this.clientHeight : this.clientWidth;\r\n    let tickSpacing = size / Math.max(1, this.ticks - 1);\r\n    const width = this.range ? 30 : 10;\r\n    const showNums = this.range && this.range.length === 2;\r\n    const min = showNums ? this.range[0] : 0;\r\n    const max = showNums ? this.range[1] : 0;\r\n\r\n    let lastTickWithText = -Infinity;\r\n    let textEnd = -Infinity;\r\n\r\n    // Prevent update if nothing has changed\r\n    if (\r\n      this.prevSize === size &&\r\n      this.prevTicks === this.ticks &&\r\n      this.prevMin === min &&\r\n      this.prevMax === max &&\r\n      !changedProps.has('unit')\r\n    ) {\r\n      return;\r\n    } else {\r\n      this.prevSize = size;\r\n      this.prevTicks = this.ticks;\r\n      this.prevMin = min;\r\n      this.prevMax = max;\r\n    }\r\n\r\n    this.shadowRoot.getElementById('svg').innerHTML = '';\r\n\r\n    let svg = d3\r\n      .select(this.shadowRoot.getElementById('svg'))\r\n      .attr('width', !this.vertical ? size : width)\r\n      .attr('height', !this.vertical ? width : size);\r\n\r\n    for (let i = 0; i < this.ticks; i++) {\r\n      if (!this.vertical) {\r\n        svg\r\n          .append('line')\r\n          .attr('x1', i * tickSpacing)\r\n          .attr('y1', 0)\r\n          .attr('x2', i * tickSpacing)\r\n          .attr('y2', 8);\r\n      } else {\r\n        svg\r\n          .append('line')\r\n          .attr('x1', 0)\r\n          .attr('y1', i * tickSpacing)\r\n          .attr('x2', 8)\r\n          .attr('y2', i * tickSpacing);\r\n      }\r\n\r\n      if (showNums) {\r\n        if (!this.vertical) {\r\n          // check to see if text will fit\r\n          let spaceBetweenTicks = (i - lastTickWithText) * tickSpacing;\r\n          let pointWhereNewTextCanBegin =\r\n            lastTickWithText * tickSpacing + spaceBetweenTicks * 0.4;\r\n          let textWillFit = textEnd < 0 || pointWhereNewTextCanBegin > textEnd;\r\n\r\n          if (textWillFit) {\r\n            const value = min + (i * (max - min)) / Math.max(this.ticks - 1, 1);\r\n\r\n            let textEl = svg\r\n              .append('text')\r\n              .attr('x', i * tickSpacing)\r\n              .attr('y', 25)\r\n              .attr('text-anchor', 'middle')\r\n              .text(value.toFixed(2) + (this.unit ? ` ${this.unit}` : ''));\r\n\r\n            textEnd = i * tickSpacing + textEl.node().getBBox().width / 2;\r\n            lastTickWithText = i;\r\n          }\r\n        } else {\r\n          const value = min + (i * (max - min)) / Math.max(this.ticks - 1, 1);\r\n\r\n          let textEl = svg\r\n            .append('text')\r\n            .attr('x', -3)\r\n            .attr('y', i * tickSpacing + 4)\r\n            .attr('text-anchor', 'end')\r\n            .text(value.toFixed(2) + (this.unit ? ` ${this.unit}` : ''));\r\n        }\r\n      }\r\n\r\n      // don't do this for last tick\r\n      if (i < this.ticks - 1) {\r\n        for (let j = 1; j < 4; j++) {\r\n          if (!this.vertical) {\r\n            svg\r\n              .append('line')\r\n              .attr('x1', i * tickSpacing + (j * tickSpacing) / 4)\r\n              .attr('y1', 0)\r\n              .attr('x2', i * tickSpacing + (j * tickSpacing) / 4)\r\n              .attr('y2', 4);\r\n          } else {\r\n            svg\r\n              .append('line')\r\n              .attr('x1', 4)\r\n              .attr('y1', i * tickSpacing + (j * tickSpacing) / 4)\r\n              .attr('x2', 8)\r\n              .attr('y2', i * tickSpacing + (j * tickSpacing) / 4);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.requestUpdate();\r\n    });\r\n    resizeObserver.observe(this);\r\n  }\r\n\r\n  updated(changedProps) {\r\n    this.setAxis(changedProps);\r\n  }\r\n\r\n  render() {\r\n    return html` <svg id=\"svg\"></svg> `;\r\n  }\r\n}\r\n\r\ncustomElements.define(elementName, TableAxis);\r\n"],"names":["elementName","elementConfig","clamp","value","min","max","Bar","LitElement","oldValue","center","val","foreground","ev","left","width","x","dragPosition","event","html","__publicField","css","TableAxis","changedProps","size","tickSpacing","showNums","lastTickWithText","textEnd","svg","d3\r\n      .select","i","spaceBetweenTicks","pointWhereNewTextCanBegin","textEl","j"],"mappings":"gRAEO,MAAMA,EAAc,UAEdC,EAAgB,CAC3B,UAAW,CACT,SAAU,GACV,YAAa,KACd,EACD,WAAY,CACV,MAAO,CAAE,KAAM,MAAQ,EACvB,IAAK,CAAE,KAAM,OAAQ,aAAc,EAAI,EACvC,IAAK,CAAE,KAAM,OAAQ,aAAc,CAAG,EACtC,OAAQ,CAAE,KAAM,MAAQ,CACzB,CACH,EAEA,SAASC,EAAMC,EAAOC,EAAKC,EAAK,CAC9B,OAAO,KAAK,IAAIA,EAAK,KAAK,IAAIF,EAAOC,CAAG,CAAC,CAC3C,CAEA,MAAME,UAAYC,CAAW,CAwC3B,aAAc,CACZ,QACA,KAAK,MAAQ,EACb,KAAK,IAAM,GACX,KAAK,IAAM,EACX,KAAK,OAAS,EACd,KAAK,SAAW,EACjB,CAED,IAAI,KAAM,CACR,OAAO,KAAK,IAAI,KAAK,KAAM,KAAK,IAAI,CACrC,CAED,IAAI,IAAIJ,EAAO,CACb,MAAMK,EAAW,KAAK,KACtB,KAAK,KAAOL,EACZ,KAAK,cAAc,MAAOK,CAAQ,CACnC,CAED,IAAI,KAAM,CACR,OAAO,KAAK,IAAI,KAAK,KAAM,KAAK,IAAI,CACrC,CAED,IAAI,IAAIL,EAAO,CACb,MAAMK,EAAW,KAAK,KACtB,KAAK,KAAOL,EACZ,KAAK,cAAc,MAAOK,CAAQ,CACnC,CAED,kBAAmB,CACjB,KAAM,CAAE,IAAAJ,EAAK,IAAAC,EAAK,OAAAI,EAAQ,MAAAN,CAAK,EAAK,KAC9BO,EAAMR,EAAMC,EAAOC,EAAKC,CAAG,EAE3BM,EAAa,KAAK,WAAW,cAAc,mBAAmB,EAEhEN,EAAMI,GACRE,EAAW,MAAM,YACf,qBACC,KAAK,IAAID,EAAML,CAAG,GAAKA,EAAMD,GAAQ,IAAM,GACpD,EACMO,EAAW,MAAM,YAAY,oBAAqB,MAAM,EACxDA,EAAW,MAAM,YAAY,qBAAsB,GAAG,GAC7CP,EAAMK,GACfE,EAAW,MAAM,YACf,qBACC,KAAK,IAAID,EAAMN,CAAG,GAAKC,EAAMD,GAAQ,IAAM,GACpD,EACMO,EAAW,MAAM,YAAY,oBAAqB,GAAG,EACrDA,EAAW,MAAM,YAAY,qBAAsB,MAAM,GAChDD,EAAMD,GACfE,EAAW,MAAM,YACf,qBACC,KAAK,IAAID,EAAMD,CAAM,GAAKJ,EAAMD,GAAQ,IAAM,GACvD,EACMO,EAAW,MAAM,YACf,oBACC,KAAK,IAAIP,EAAMK,CAAM,GAAKJ,EAAMD,GAAQ,IAAM,GACvD,EACMO,EAAW,MAAM,YAAY,qBAAsB,MAAM,IAEzDA,EAAW,MAAM,YACf,qBACC,KAAK,IAAID,EAAMD,CAAM,GAAKJ,EAAMD,GAAQ,IAAM,GACvD,EACMO,EAAW,MAAM,YAAY,oBAAqB,MAAM,EACxDA,EAAW,MAAM,YACf,qBACC,KAAK,IAAIN,EAAMI,CAAM,GAAKJ,EAAMD,GAAQ,IAAM,GACvD,EAEG,CAED,SAAU,CACR,KAAK,iBAAgB,CACtB,CAED,SAAU,CACR,KAAK,iBAAgB,CACtB,CAED,gBAAgBQ,EAAI,CAClB,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAO,EAAG,KAAK,sBAAqB,EAC5CC,EAAIH,EAAG,QAAUC,EACjBG,EAAed,EAAMa,EAAID,EAAO,EAAG,CAAC,EACpCX,EAAQ,KAAK,KAAO,KAAK,IAAM,KAAK,KAAOa,EAE3CC,EAAQ,IAAI,YAAY,UAAW,CACvC,QAAS,GACT,SAAU,GACV,OAAQ,CAAE,MAAAd,CAAO,CACvB,CAAK,EAED,KAAK,cAAcc,CAAK,CACzB,CAED,cAAe,CACb,KAAK,aAAa,YAAa,OAAO,EAEtC,OAAO,iBAAiB,YAAcL,GAAO,CACtC,KAAK,UAIV,KAAK,gBAAgBA,CAAE,CAC7B,CAAK,EAED,OAAO,iBAAiB,UAAYA,GAAO,CACzC,KAAK,SAAW,EACtB,CAAK,CACF,CAED,YAAYA,EAAI,CACd,KAAK,SAAW,GAChB,KAAK,gBAAgBA,CAAE,CACxB,CAED,QAAS,CACP,OAAOM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,wCAK6B,KAAK;AAAA,KAE1C,CACH,CApKEC,EADIb,EACG,aAAaL,EAAc,YAElCkB,EAHIb,EAGG,SAASc;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KAoKlB,eAAe,OAAOpB,EAAaM,CAAG,ECzL/B,MAAMN,EAAc,iBAEdC,EAAgB,CAC3B,UAAW,CACT,SAAU,GACV,YAAa,YACd,EACD,WAAY,CACV,SAAU,CAAE,KAAM,OAAS,EAC3B,MAAO,CAAE,KAAM,MAAQ,EACvB,MAAO,CAAE,KAAM,KAAO,EACtB,KAAM,CAAE,KAAM,MAAQ,CACvB,CACH,EAEA,MAAMoB,UAAkBd,CAAW,CAgCjC,aAAc,CACZ,QACA,KAAK,SAAW,EAChB,KAAK,UAAY,EACjB,KAAK,QAAU,KACf,KAAK,QAAU,KAGf,KAAK,SAAW,GAChB,KAAK,MAAQ,EACb,KAAK,MAAQ,GACb,KAAK,KAAO,EACb,CAED,QAAQe,EAAc,CACpB,IAAIC,EAAO,KAAK,SAAW,KAAK,aAAe,KAAK,YAChDC,EAAcD,EAAO,KAAK,IAAI,EAAG,KAAK,MAAQ,CAAC,EACnD,MAAMT,EAAQ,KAAK,MAAQ,GAAK,GAC1BW,EAAW,KAAK,OAAS,KAAK,MAAM,SAAW,EAC/CrB,EAAMqB,EAAW,KAAK,MAAM,GAAK,EACjCpB,EAAMoB,EAAW,KAAK,MAAM,GAAK,EAEvC,IAAIC,EAAmB,KACnBC,EAAU,KAGd,GACE,KAAK,WAAaJ,GAClB,KAAK,YAAc,KAAK,OACxB,KAAK,UAAYnB,GACjB,KAAK,UAAYC,GACjB,CAACiB,EAAa,IAAI,MAAM,EAExB,OAEA,KAAK,SAAWC,EAChB,KAAK,UAAY,KAAK,MACtB,KAAK,QAAUnB,EACf,KAAK,QAAUC,EAGjB,KAAK,WAAW,eAAe,KAAK,EAAE,UAAY,GAElD,IAAIuB,EAAMC,EACA,KAAK,WAAW,eAAe,KAAK,CAAC,EAC5C,KAAK,QAAU,KAAK,SAAkBf,EAAPS,CAAY,EAC3C,KAAK,SAAW,KAAK,SAAmBA,EAART,CAAY,EAE/C,QAASgB,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAAK,CAiBnC,GAhBK,KAAK,SAQRF,EACG,OAAO,MAAM,EACb,KAAK,KAAM,CAAC,EACZ,KAAK,KAAME,EAAIN,CAAW,EAC1B,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,CAAW,EAZ7BI,EACG,OAAO,MAAM,EACb,KAAK,KAAME,EAAIN,CAAW,EAC1B,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,CAAW,EAC1B,KAAK,KAAM,CAAC,EAUbC,EACF,GAAK,KAAK,SAoBH,CACL,MAAMtB,EAAQC,EAAO0B,GAAKzB,EAAMD,GAAQ,KAAK,IAAI,KAAK,MAAQ,EAAG,CAAC,EAErDwB,EACV,OAAO,MAAM,EACb,KAAK,IAAK,EAAE,EACZ,KAAK,IAAKE,EAAIN,EAAc,CAAC,EAC7B,KAAK,cAAe,KAAK,EACzB,KAAKrB,EAAM,QAAQ,CAAC,GAAK,KAAK,KAAO,IAAI,KAAK,OAAS,GAAG,CAC9D,KA7BmB,CAElB,IAAI4B,GAAqBD,EAAIJ,GAAoBF,EAC7CQ,EACFN,EAAmBF,EAAcO,EAAoB,GAGvD,GAFkBJ,EAAU,GAAKK,EAA4BL,EAE5C,CACf,MAAMxB,EAAQC,EAAO0B,GAAKzB,EAAMD,GAAQ,KAAK,IAAI,KAAK,MAAQ,EAAG,CAAC,EAElE,IAAI6B,EAASL,EACV,OAAO,MAAM,EACb,KAAK,IAAKE,EAAIN,CAAW,EACzB,KAAK,IAAK,EAAE,EACZ,KAAK,cAAe,QAAQ,EAC5B,KAAKrB,EAAM,QAAQ,CAAC,GAAK,KAAK,KAAO,IAAI,KAAK,OAAS,GAAG,EAE7DwB,EAAUG,EAAIN,EAAcS,EAAO,KAAI,EAAG,QAAO,EAAG,MAAQ,EAC5DP,EAAmBI,CACpB,CACX,CAaM,GAAIA,EAAI,KAAK,MAAQ,EACnB,QAASI,EAAI,EAAGA,EAAI,EAAGA,IAChB,KAAK,SAQRN,EACG,OAAO,MAAM,EACb,KAAK,KAAM,CAAC,EACZ,KAAK,KAAME,EAAIN,EAAeU,EAAIV,EAAe,CAAC,EAClD,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,EAAeU,EAAIV,EAAe,CAAC,EAZrDI,EACG,OAAO,MAAM,EACb,KAAK,KAAME,EAAIN,EAAeU,EAAIV,EAAe,CAAC,EAClD,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,EAAeU,EAAIV,EAAe,CAAC,EAClD,KAAK,KAAM,CAAC,CAWtB,CACF,CAED,cAAe,CACU,IAAI,eAAe,IAAM,CAC9C,KAAK,cAAa,CACxB,CAAK,EACc,QAAQ,IAAI,CAC5B,CAED,QAAQF,EAAc,CACpB,KAAK,QAAQA,CAAY,CAC1B,CAED,QAAS,CACP,OAAOJ,yBACR,CACH,CAtKEC,EADIE,EACG,SAASD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KA6BhBD,EA9BIE,EA8BG,aAAapB,EAAc,YA2IpC,eAAe,OAAOD,EAAaqB,CAAS"}