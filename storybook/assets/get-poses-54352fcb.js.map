{"version":3,"file":"get-poses-54352fcb.js","sources":["../../src/components/field/get-poses.ts"],"sourcesContent":["function chunkArray(array: Uint8Array | number[], chunkSize: number) {\r\n  const chunks = [];\r\n  for (let i = 0; i < array.length / chunkSize; i += 1) {\r\n    chunks.push(array.slice(chunkSize * i, chunkSize * (i + 1)));\r\n  }\r\n  return chunks;\r\n}\r\n\r\n// https://stackoverflow.com/a/37826698\r\nfunction getFloatingPointNumber(data: Uint8Array | number[]) {\r\n  // Create a buffer\r\n  const buf = new ArrayBuffer(8);\r\n  // Create a data view of it\r\n  const view = new DataView(buf);\r\n\r\n  // set bytes\r\n  data.forEach((b, i) => {\r\n    view.setUint8(i, b);\r\n  });\r\n\r\n  // Read the bits as a float/native 64-bit double\r\n  return view.getFloat64(0);\r\n}\r\n\r\nfunction getFloatArray(data: Uint8Array) {\r\n  const chunks = chunkArray(data, 8);\r\n  return chunks.map(getFloatingPointNumber);\r\n}\r\n\r\nexport default function getPoses(\r\n  data: Uint8Array | number[],\r\n  chunkSize = 3\r\n): (Uint8Array | number[])[] {\r\n  const floatArray = data instanceof Uint8Array ? getFloatArray(data) : data;\r\n  return chunkArray(floatArray, chunkSize);\r\n}\r\n"],"names":["chunkArray","array","chunkSize","chunks","i","getFloatingPointNumber","data","buf","view","b","getFloatArray","getPoses","floatArray"],"mappings":"AAAA,SAASA,EAAWC,EAA8BC,EAAmB,CACnE,MAAMC,EAAS,CAAA,EACf,QAASC,EAAI,EAAGA,EAAIH,EAAM,OAASC,EAAWE,GAAK,EAC1CD,EAAA,KAAKF,EAAM,MAAMC,EAAYE,EAAGF,GAAaE,EAAI,EAAE,CAAC,EAEtD,OAAAD,CACT,CAGA,SAASE,EAAuBC,EAA6B,CAErD,MAAAC,EAAM,IAAI,YAAY,CAAC,EAEvBC,EAAO,IAAI,SAASD,CAAG,EAGxB,OAAAD,EAAA,QAAQ,CAACG,EAAGL,IAAM,CAChBI,EAAA,SAASJ,EAAGK,CAAC,CAAA,CACnB,EAGMD,EAAK,WAAW,CAAC,CAC1B,CAEA,SAASE,EAAcJ,EAAkB,CAEhC,OADQN,EAAWM,EAAM,CAAC,EACnB,IAAID,CAAsB,CAC1C,CAEwB,SAAAM,EACtBL,EACAJ,EAAY,EACe,CAC3B,MAAMU,EAAaN,aAAgB,WAAaI,EAAcJ,CAAI,EAAIA,EAC/D,OAAAN,EAAWY,EAAYV,CAAS,CACzC"}