{"version":3,"file":"table-axis-856d24ca.js","sources":["../../node_modules/@lit/reactive-element/decorators/state.js","../../src/elements/base/base-elements/bar.ts","../../src/elements/base/base-elements/table-axis.ts"],"sourcesContent":["import{property as r}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function t(t){return r({...t,state:!0})}export{t as state};\n//# sourceMappingURL=state.js.map\n","/* eslint-disable no-underscore-dangle */\nimport { html, css, LitElement } from 'lit';\nimport { property, state, query } from 'lit/decorators.js';\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.min(max, Math.max(value, min));\n}\n\nexport default class Bar extends LitElement {\n  private _min = -1;\n  private _max = 1;\n\n  @property({ type: Number }) value = 0;\n  @property({ type: Number }) center = 0;\n  @state() dragging = false;\n\n  @property({ type: Number })\n  get min(): number {\n    return Math.min(this._min, this._max);\n  }\n\n  set min(value: number) {\n    const oldValue = this._min;\n    this._min = value;\n    this.requestUpdate('min', oldValue);\n  }\n\n  @property({ type: Number })\n  get max(): number {\n    return Math.max(this._min, this._max);\n  }\n\n  set max(value: number) {\n    const oldValue = this._max;\n    this._max = value;\n    this.requestUpdate('max', oldValue);\n  }\n\n  @query('[part=foreground]') foreground!: HTMLElement;\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      position: relative;\n      width: 300px;\n      height: 20px;\n      background: var(--frc-bar-background, #ddd);\n      color: var(--frc-bar-color, black);\n      font-size: 15px;\n      line-height: 18px;\n      text-align: center;\n    }\n\n    [part='dragger'] {\n      position: absolute;\n      top: 0;\n      height: 100%;\n      width: 100%;\n    }\n\n    [part='foreground'] {\n      position: absolute;\n      top: 0;\n      height: 100%;\n      background: var(--frc-bar-foreground, lightblue);\n      border-radius: 3px;\n      width: var(--foreground-width);\n      left: var(--foreground-left);\n      right: var(--foreground-right);\n      pointer-events: none;\n    }\n\n    .content {\n      position: relative;\n    }\n  `;\n\n  updateForeground() {\n    const { min, max, center, value, foreground } = this;\n    const val = clamp(value, min, max);\n\n    if (max < center) {\n      foreground.style.setProperty(\n        '--foreground-width',\n        `${(Math.abs(val - max) / (max - min)) * 100}%`\n      );\n      foreground.style.setProperty('--foreground-left', 'auto');\n      foreground.style.setProperty('--foreground-right', '0');\n    } else if (min > center) {\n      foreground.style.setProperty(\n        '--foreground-width',\n        `${(Math.abs(val - min) / (max - min)) * 100}%`\n      );\n      foreground.style.setProperty('--foreground-left', '0');\n      foreground.style.setProperty('--foreground-right', 'auto');\n    } else if (val > center) {\n      foreground.style.setProperty(\n        '--foreground-width',\n        `${(Math.abs(val - center) / (max - min)) * 100}%`\n      );\n      foreground.style.setProperty(\n        '--foreground-left',\n        `${(Math.abs(min - center) / (max - min)) * 100}%`\n      );\n      foreground.style.setProperty('--foreground-right', 'auto');\n    } else {\n      foreground.style.setProperty(\n        '--foreground-width',\n        `${(Math.abs(val - center) / (max - min)) * 100}%`\n      );\n      foreground.style.setProperty('--foreground-left', 'auto');\n      foreground.style.setProperty(\n        '--foreground-right',\n        `${(Math.abs(max - center) / (max - min)) * 100}%`\n      );\n    }\n  }\n\n  resized() {\n    this.updateForeground();\n  }\n\n  updated() {\n    this.updateForeground();\n  }\n\n  setDragPosition(ev: MouseEvent) {\n    const { left, width } = this.getBoundingClientRect();\n    const x = ev.clientX - left;\n    const dragPosition = clamp(x / width, 0, 1);\n    const value = this.min + (this.max - this.min) * dragPosition;\n\n    const event = new CustomEvent('barDrag', {\n      bubbles: true,\n      composed: true,\n      detail: { value },\n    });\n\n    this.dispatchEvent(event);\n  }\n\n  firstUpdated() {\n    this.setAttribute('draggable', 'false');\n\n    window.addEventListener('mousemove', (ev: MouseEvent) => {\n      if (!this.dragging) {\n        return;\n      }\n\n      this.setDragPosition(ev);\n    });\n\n    window.addEventListener('mouseup', () => {\n      this.dragging = false;\n    });\n  }\n\n  onMouseDown(ev: DragEvent) {\n    this.dragging = true;\n    this.setDragPosition(ev);\n  }\n\n  render() {\n    return html`\n      <div part=\"foreground\" draggble=\"false\"></div>\n      <div class=\"content\" draggable=\"false\">\n        <slot></slot>\n      </div>\n      <div part=\"dragger\" @mousedown=\"${this.onMouseDown}\"></div>\n    `;\n  }\n}\n\nif (!customElements.get('frc-bar')) {\n  customElements.define('frc-bar', Bar);\n}\n","import { html, css, LitElement } from 'lit';\nimport { property, state, query } from 'lit/decorators.js';\nimport { select } from 'd3';\n\nexport default class TableAxis extends LitElement {\n  @property({ type: Boolean }) vertical = false;\n  @property({ type: Number }) ticks = 0;\n  @property({ type: Array }) range = [];\n  @property({ type: String }) unit = '';\n\n  @state() prevSize = 0;\n  @state() prevTicks = 0;\n  @state() prevMin: number | null = null;\n  @state() prevMax: number | null = null;\n\n  @query('#svg') svg!: HTMLElement;\n\n  static styles = css`\n    :host {\n      display: block;\n    }\n\n    :host([vertical]) {\n      height: 100%;\n    }\n\n    :host(:not([vertical])) {\n      width: 100%;\n    }\n\n    svg {\n      overflow: visible;\n    }\n\n    line {\n      stroke: rgb(150, 150, 150);\n      stroke-width: 2;\n    }\n\n    text {\n      font-weight: normal;\n      font-size: 13px;\n      fill: var(--frc-tab-axis-text-color, #000);\n    }\n  `;\n\n  setAxis(changedProps: Map<string, unknown>) {\n    const size = this.vertical ? this.clientHeight : this.clientWidth;\n    const tickSpacing = size / Math.max(1, this.ticks - 1);\n    const width = this.range ? 30 : 10;\n    const showNums = this.range && this.range.length === 2;\n    const min = showNums ? this.range[0] : 0;\n    const max = showNums ? this.range[1] : 0;\n\n    let lastTickWithText = -Infinity;\n    let textEnd = -Infinity;\n\n    // Prevent update if nothing has changed\n    if (\n      this.prevSize === size &&\n      this.prevTicks === this.ticks &&\n      this.prevMin === min &&\n      this.prevMax === max &&\n      !changedProps.has('unit')\n    ) {\n      return;\n    }\n    this.prevSize = size;\n    this.prevTicks = this.ticks;\n    this.prevMin = min;\n    this.prevMax = max;\n\n    this.svg.innerHTML = '';\n\n    const svg = select(this.svg)\n      .attr('width', !this.vertical ? size : width)\n      .attr('height', !this.vertical ? width : size);\n\n    for (let i = 0; i < this.ticks; i += 1) {\n      if (!this.vertical) {\n        svg\n          .append('line')\n          .attr('x1', i * tickSpacing)\n          .attr('y1', 0)\n          .attr('x2', i * tickSpacing)\n          .attr('y2', 8);\n      } else {\n        svg\n          .append('line')\n          .attr('x1', 0)\n          .attr('y1', i * tickSpacing)\n          .attr('x2', 8)\n          .attr('y2', i * tickSpacing);\n      }\n\n      if (showNums) {\n        if (!this.vertical) {\n          // check to see if text will fit\n          const spaceBetweenTicks = (i - lastTickWithText) * tickSpacing;\n          const pointWhereNewTextCanBegin =\n            lastTickWithText * tickSpacing + spaceBetweenTicks * 0.4;\n          const textWillFit =\n            textEnd < 0 || pointWhereNewTextCanBegin > textEnd;\n\n          if (textWillFit) {\n            const value = min + (i * (max - min)) / Math.max(this.ticks - 1, 1);\n\n            const textEl = svg\n              .append('text')\n              .attr('x', i * tickSpacing)\n              .attr('y', 25)\n              .attr('text-anchor', 'middle')\n              .text(value.toFixed(2) + (this.unit ? ` ${this.unit}` : ''));\n\n            textEnd =\n              i * tickSpacing + (textEl.node()?.getBBox().width ?? 0) / 2;\n            lastTickWithText = i;\n          }\n        } else {\n          const value = min + (i * (max - min)) / Math.max(this.ticks - 1, 1);\n\n          svg\n            .append('text')\n            .attr('x', -3)\n            .attr('y', i * tickSpacing + 4)\n            .attr('text-anchor', 'end')\n            .text(value.toFixed(2) + (this.unit ? ` ${this.unit}` : ''));\n        }\n      }\n\n      // don't do this for last tick\n      if (i < this.ticks - 1) {\n        for (let j = 1; j < 4; j += 1) {\n          if (!this.vertical) {\n            svg\n              .append('line')\n              .attr('x1', i * tickSpacing + (j * tickSpacing) / 4)\n              .attr('y1', 0)\n              .attr('x2', i * tickSpacing + (j * tickSpacing) / 4)\n              .attr('y2', 4);\n          } else {\n            svg\n              .append('line')\n              .attr('x1', 4)\n              .attr('y1', i * tickSpacing + (j * tickSpacing) / 4)\n              .attr('x2', 8)\n              .attr('y2', i * tickSpacing + (j * tickSpacing) / 4);\n          }\n        }\n      }\n    }\n  }\n\n  firstUpdated() {\n    const resizeObserver = new ResizeObserver(() => {\n      this.requestUpdate();\n    });\n    resizeObserver.observe(this);\n  }\n\n  updated(changedProps: Map<string, unknown>) {\n    this.setAxis(changedProps);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return html` <svg id=\"svg\"></svg> `;\n  }\n}\n\nif (!customElements.get('frc-table-axis')) {\n  customElements.define('frc-table-axis', TableAxis);\n}\n"],"names":["t","r","clamp","value","min","max","Bar","LitElement","oldValue","center","foreground","val","ev","left","width","x","dragPosition","event","html","css","__decorateClass","property","state","query","TableAxis","changedProps","size","tickSpacing","showNums","lastTickWithText","textEnd","svg","select","i","spaceBetweenTicks","pointWhereNewTextCanBegin","textEl","_a","j"],"mappings":"0MACA;AAAA;AAAA;AAAA;AAAA,GAIG,SAASA,EAAEA,EAAE,CAAC,OAAOC,EAAE,CAAC,GAAGD,EAAE,MAAM,EAAE,CAAC,CAAC,iMCD1C,SAASE,EAAMC,EAAeC,EAAaC,EAAa,CACtD,OAAO,KAAK,IAAIA,EAAK,KAAK,IAAIF,EAAOC,CAAG,CAAC,CAC3C,CAEA,MAAqBE,UAAYC,CAAW,CAA5C,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAQ,KAAO,GACf,KAAQ,KAAO,EAEqB,KAAA,MAAA,EACC,KAAA,OAAA,EACjB,KAAA,SAAA,EAAA,CAGpB,IAAI,KAAc,CAChB,OAAO,KAAK,IAAI,KAAK,KAAM,KAAK,IAAI,CACtC,CAEA,IAAI,IAAIJ,EAAe,CACrB,MAAMK,EAAW,KAAK,KACtB,KAAK,KAAOL,EACP,KAAA,cAAc,MAAOK,CAAQ,CACpC,CAGA,IAAI,KAAc,CAChB,OAAO,KAAK,IAAI,KAAK,KAAM,KAAK,IAAI,CACtC,CAEA,IAAI,IAAIL,EAAe,CACrB,MAAMK,EAAW,KAAK,KACtB,KAAK,KAAOL,EACP,KAAA,cAAc,MAAOK,CAAQ,CACpC,CAyCA,kBAAmB,CACjB,KAAM,CAAE,IAAAJ,EAAK,IAAAC,EAAK,OAAAI,EAAQ,MAAAN,EAAO,WAAAO,CAAe,EAAA,KAC1CC,EAAMT,EAAMC,EAAOC,EAAKC,CAAG,EAE7BA,EAAMI,GACRC,EAAW,MAAM,YACf,qBACA,GAAI,KAAK,IAAIC,EAAMN,CAAG,GAAKA,EAAMD,GAAQ,MAAA,EAEhCM,EAAA,MAAM,YAAY,oBAAqB,MAAM,EAC7CA,EAAA,MAAM,YAAY,qBAAsB,GAAG,GAC7CN,EAAMK,GACfC,EAAW,MAAM,YACf,qBACA,GAAI,KAAK,IAAIC,EAAMP,CAAG,GAAKC,EAAMD,GAAQ,MAAA,EAEhCM,EAAA,MAAM,YAAY,oBAAqB,GAAG,EAC1CA,EAAA,MAAM,YAAY,qBAAsB,MAAM,GAChDC,EAAMF,GACfC,EAAW,MAAM,YACf,qBACA,GAAI,KAAK,IAAIC,EAAMF,CAAM,GAAKJ,EAAMD,GAAQ,MAAA,EAE9CM,EAAW,MAAM,YACf,oBACA,GAAI,KAAK,IAAIN,EAAMK,CAAM,GAAKJ,EAAMD,GAAQ,MAAA,EAEnCM,EAAA,MAAM,YAAY,qBAAsB,MAAM,IAEzDA,EAAW,MAAM,YACf,qBACA,GAAI,KAAK,IAAIC,EAAMF,CAAM,GAAKJ,EAAMD,GAAQ,MAAA,EAEnCM,EAAA,MAAM,YAAY,oBAAqB,MAAM,EACxDA,EAAW,MAAM,YACf,qBACA,GAAI,KAAK,IAAIL,EAAMI,CAAM,GAAKJ,EAAMD,GAAQ,MAAA,EAGlD,CAEA,SAAU,CACR,KAAK,iBAAiB,CACxB,CAEA,SAAU,CACR,KAAK,iBAAiB,CACxB,CAEA,gBAAgBQ,EAAgB,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAM,EAAI,KAAK,sBAAsB,EAC7CC,EAAIH,EAAG,QAAUC,EACjBG,EAAed,EAAMa,EAAID,EAAO,EAAG,CAAC,EACpCX,EAAQ,KAAK,KAAO,KAAK,IAAM,KAAK,KAAOa,EAE3CC,EAAQ,IAAI,YAAY,UAAW,CACvC,QAAS,GACT,SAAU,GACV,OAAQ,CAAE,MAAAd,CAAM,CAAA,CACjB,EAED,KAAK,cAAcc,CAAK,CAC1B,CAEA,cAAe,CACR,KAAA,aAAa,YAAa,OAAO,EAE/B,OAAA,iBAAiB,YAAcL,GAAmB,CAClD,KAAK,UAIV,KAAK,gBAAgBA,CAAE,CAAA,CACxB,EAEM,OAAA,iBAAiB,UAAW,IAAM,CACvC,KAAK,SAAW,EAAA,CACjB,CACH,CAEA,YAAYA,EAAe,CACzB,KAAK,SAAW,GAChB,KAAK,gBAAgBA,CAAE,CACzB,CAEA,QAAS,CACA,OAAAM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,wCAK6B,KAAK;AAAA,KAE3C,CACF,CAnKqBZ,EAgCZ,OAASa;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IA5BYC,EAAA,CAA3BC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAJPf,EAIS,UAAA,QAAA,CAAA,EACAc,EAAA,CAA3BC,EAAS,CAAE,KAAM,OAAQ,CAAA,EALPf,EAKS,UAAA,SAAA,CAAA,EACnBc,EAAA,CAARE,EAAM,CAAA,EANYhB,EAMV,UAAA,WAAA,CAAA,EAGLc,EAAA,CADHC,EAAS,CAAE,KAAM,OAAQ,CAAA,EARPf,EASf,UAAA,MAAA,CAAA,EAWAc,EAAA,CADHC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAnBPf,EAoBf,UAAA,MAAA,CAAA,EAUwBc,EAAA,CAA3BG,EAAM,mBAAmB,CAAA,EA9BPjB,EA8BS,UAAA,aAAA,CAAA,EAuIzB,eAAe,IAAI,SAAS,GAChB,eAAA,OAAO,UAAWA,CAAG,kMC1KtC,MAAqBkB,UAAkBjB,CAAW,CAAlD,aAAA,CAAA,MAAA,GAAA,SAAA,EAC0C,KAAA,SAAA,GACJ,KAAA,MAAA,EACT,KAAA,MAAQ,GACA,KAAA,KAAA,GAEf,KAAA,SAAA,EACC,KAAA,UAAA,EACa,KAAA,QAAA,KACA,KAAA,QAAA,IAAA,CAiClC,QAAQkB,EAAoC,OAC1C,MAAMC,EAAO,KAAK,SAAW,KAAK,aAAe,KAAK,YAChDC,EAAcD,EAAO,KAAK,IAAI,EAAG,KAAK,MAAQ,CAAC,EAC/CZ,EAAQ,KAAK,MAAQ,GAAK,GAC1Bc,EAAW,KAAK,OAAS,KAAK,MAAM,SAAW,EAC/CxB,EAAMwB,EAAW,KAAK,MAAM,GAAK,EACjCvB,EAAMuB,EAAW,KAAK,MAAM,GAAK,EAEvC,IAAIC,EAAmB,KACnBC,EAAU,KAGd,GACE,KAAK,WAAaJ,GAClB,KAAK,YAAc,KAAK,OACxB,KAAK,UAAYtB,GACjB,KAAK,UAAYC,GACjB,CAACoB,EAAa,IAAI,MAAM,EAExB,OAEF,KAAK,SAAWC,EAChB,KAAK,UAAY,KAAK,MACtB,KAAK,QAAUtB,EACf,KAAK,QAAUC,EAEf,KAAK,IAAI,UAAY,GAErB,MAAM0B,EAAMC,EAAO,KAAK,GAAG,EACxB,KAAK,QAAU,KAAK,SAAkBlB,EAAPY,CAAY,EAC3C,KAAK,SAAW,KAAK,SAAmBA,EAARZ,CAAY,EAE/C,QAASmB,EAAI,EAAGA,EAAI,KAAK,MAAOA,GAAK,EAAG,CAiBtC,GAhBK,KAAK,SAQRF,EACG,OAAO,MAAM,EACb,KAAK,KAAM,CAAC,EACZ,KAAK,KAAME,EAAIN,CAAW,EAC1B,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,CAAW,EAZ7BI,EACG,OAAO,MAAM,EACb,KAAK,KAAME,EAAIN,CAAW,EAC1B,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,CAAW,EAC1B,KAAK,KAAM,CAAC,EAUbC,EACE,GAAC,KAAK,SAsBH,CACC,MAAAzB,EAAQC,EAAO6B,GAAK5B,EAAMD,GAAQ,KAAK,IAAI,KAAK,MAAQ,EAAG,CAAC,EAG/D2B,EAAA,OAAO,MAAM,EACb,KAAK,IAAK,EAAE,EACZ,KAAK,IAAKE,EAAIN,EAAc,CAAC,EAC7B,KAAK,cAAe,KAAK,EACzB,KAAKxB,EAAM,QAAQ,CAAC,GAAK,KAAK,KAAO,IAAI,KAAK,OAAS,GAAG,CAC/D,KA/BoB,CAEZ,MAAA+B,GAAqBD,EAAIJ,GAAoBF,EAC7CQ,EACJN,EAAmBF,EAAcO,EAAoB,GAIvD,GAFEJ,EAAU,GAAKK,EAA4BL,EAE5B,CACT,MAAA3B,EAAQC,EAAO6B,GAAK5B,EAAMD,GAAQ,KAAK,IAAI,KAAK,MAAQ,EAAG,CAAC,EAE5DgC,EAASL,EACZ,OAAO,MAAM,EACb,KAAK,IAAKE,EAAIN,CAAW,EACzB,KAAK,IAAK,EAAE,EACZ,KAAK,cAAe,QAAQ,EAC5B,KAAKxB,EAAM,QAAQ,CAAC,GAAK,KAAK,KAAO,IAAI,KAAK,OAAS,GAAG,EAG3D2B,EAAAG,EAAIN,KAAeU,EAAAD,EAAO,SAAP,YAAAC,EAAe,UAAU,QAAS,GAAK,EACzCR,EAAAI,CACrB,CAAA,CAcA,GAAAA,EAAI,KAAK,MAAQ,EACnB,QAASK,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACrB,KAAK,SASLP,EAAA,OAAO,MAAM,EACb,KAAK,KAAM,CAAC,EACZ,KAAK,KAAME,EAAIN,EAAeW,EAAIX,EAAe,CAAC,EAClD,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,EAAeW,EAAIX,EAAe,CAAC,EAXlDI,EAAA,OAAO,MAAM,EACb,KAAK,KAAME,EAAIN,EAAeW,EAAIX,EAAe,CAAC,EAClD,KAAK,KAAM,CAAC,EACZ,KAAK,KAAMM,EAAIN,EAAeW,EAAIX,EAAe,CAAC,EAClD,KAAK,KAAM,CAAC,CAWvB,CACF,CAEA,cAAe,CACU,IAAI,eAAe,IAAM,CAC9C,KAAK,cAAc,CAAA,CACpB,EACc,QAAQ,IAAI,CAC7B,CAEA,QAAQF,EAAoC,CAC1C,KAAK,QAAQA,CAAY,CAC3B,CAGA,QAAS,CACA,OAAAP,yBACT,CACF,CApKqBM,EAaZ,OAASL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAZaC,EAAA,CAA5BC,EAAS,CAAE,KAAM,QAAS,CAAA,EADRG,EACU,UAAA,WAAA,CAAA,EACDJ,EAAA,CAA3BC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAFPG,EAES,UAAA,QAAA,CAAA,EACDJ,EAAA,CAA1BC,EAAS,CAAE,KAAM,MAAO,CAAA,EAHNG,EAGQ,UAAA,QAAA,CAAA,EACCJ,EAAA,CAA3BC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAJPG,EAIS,UAAA,OAAA,CAAA,EAEnBJ,EAAA,CAARE,EAAM,CAAA,EANYE,EAMV,UAAA,WAAA,CAAA,EACAJ,EAAA,CAARE,EAAM,CAAA,EAPYE,EAOV,UAAA,YAAA,CAAA,EACAJ,EAAA,CAARE,EAAM,CAAA,EARYE,EAQV,UAAA,UAAA,CAAA,EACAJ,EAAA,CAARE,EAAM,CAAA,EATYE,EASV,UAAA,UAAA,CAAA,EAEMJ,EAAA,CAAdG,EAAM,MAAM,CAAA,EAXMC,EAWJ,UAAA,MAAA,CAAA,EA2JZ,eAAe,IAAI,gBAAgB,GACvB,eAAA,OAAO,iBAAkBA,CAAS","x_google_ignoreList":[0]}