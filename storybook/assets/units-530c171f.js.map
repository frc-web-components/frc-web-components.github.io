{"version":3,"file":"units-530c171f.js","sources":["../../src/elements/base/field/units.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\r\nexport const baseUnit = 'm';\r\n\r\nexport const toBaseConversions: Record<string, number> = {\r\n  // metric\r\n  km: 1000,\r\n  m: 1,\r\n  cm: 0.01,\r\n  mm: 0.001,\r\n  // imperial\r\n  mi: 1609.34,\r\n  yd: 0.9144,\r\n  ft: 0.3048,\r\n  in: 0.0254,\r\n};\r\n\r\nexport const unitAliases: Record<string, string> = {\r\n  km: 'km',\r\n  m: 'm',\r\n  meters: 'm',\r\n  cm: 'cm',\r\n  centimeters: 'cm',\r\n  mm: 'mm',\r\n  // imperial\r\n  mi: 'mi',\r\n  miles: 'mi',\r\n  yd: 'yd',\r\n  yards: 'yards',\r\n  ft: 'ft',\r\n  feet: 'ft',\r\n  foot: 'ft',\r\n  in: 'in',\r\n  inches: 'in',\r\n};\r\n\r\nexport const convert = (value: number, from: string, to: string): number => {\r\n  from = unitAliases[from];\r\n  to = unitAliases[to];\r\n  if (typeof toBaseConversions[from] === 'undefined') {\r\n    from = baseUnit;\r\n  }\r\n  if (typeof toBaseConversions[to] === 'undefined') {\r\n    to = baseUnit;\r\n  }\r\n  return (value * toBaseConversions[from]) / toBaseConversions[to];\r\n};\r\n"],"names":["baseUnit","toBaseConversions","unitAliases","convert","value","from","to"],"mappings":"AACO,MAAMA,EAAW,IAEXC,EAA4C,CAEvD,GAAI,IACJ,EAAG,EACH,GAAI,IACJ,GAAI,KAEJ,GAAI,QACJ,GAAI,MACJ,GAAI,MACJ,GAAI,KACN,EAEaC,EAAsC,CACjD,GAAI,KACJ,EAAG,IACH,OAAQ,IACR,GAAI,KACJ,YAAa,KACb,GAAI,KAEJ,GAAI,KACJ,MAAO,KACP,GAAI,KACJ,MAAO,QACP,GAAI,KACJ,KAAM,KACN,KAAM,KACN,GAAI,KACJ,OAAQ,IACV,EAEaC,EAAU,CAACC,EAAeC,EAAcC,KACnDD,EAAOH,EAAYG,GACnBC,EAAKJ,EAAYI,GACb,OAAOL,EAAkBI,GAAU,MAC9BA,EAAAL,GAEL,OAAOC,EAAkBK,GAAQ,MAC9BA,EAAAN,GAECI,EAAQH,EAAkBI,GAASJ,EAAkBK"}