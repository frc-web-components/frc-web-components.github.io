{"version":3,"file":"Gauge.stories-d1d1e529.js","sources":["../../node_modules/svg-gauge/src/gauge.js","../../node_modules/svg-gauge/index.js","../../src/elements/base/gauge.ts"],"sourcesContent":["/* global window, define, module */\n(function(global, factory) {\n  var Gauge = factory(global);\n  if(typeof define === \"function\" && define.amd) {\n    // AMD support\n    define(function() {return Gauge;});\n  }else if(typeof module === \"object\" && module.exports) {\n    // CommonJS support\n    module.exports = Gauge;\n  }else {\n    // We are probably running in the browser\n    global.Gauge = Gauge;\n  }\n})(typeof window === \"undefined\" ? this : window, function(global, undefined) {\n\n  var document = global.document,\n    slice = Array.prototype.slice,\n    requestAnimationFrame = (global.requestAnimationFrame ||\n        global.mozRequestAnimationFrame ||\n        global.webkitRequestAnimationFrame ||\n        global.msRequestAnimationFrame ||\n        function(cb) {\n          return setTimeout(cb, 1000 / 60);\n        });\n\n  // EXPERIMENTAL!!\n  /**\n   * Simplistic animation function for animating the gauge. That's all!\n   * Options are:\n   * {\n   *  duration: 1,    // In seconds\n   *  start: 0,       // The start value\n   *  end: 100,       // The end value\n   *  step: function, // REQUIRED! The step function that will be passed the value and does something\n   *  easing: function // The easing function. Default is easeInOutCubic\n   * }\n   */\n  function Animation(options) {\n    var duration = options.duration,\n        currentIteration = 1,\n        iterations = 60 * duration,\n        start = options.start || 0,\n        end = options.end,\n        change = end - start,\n        step = options.step,\n        easing = options.easing || function easeInOutCubic(pos) {\n          // https://github.com/danro/easing-js/blob/master/easing.js\n          if ((pos/=0.5) < 1) return 0.5*Math.pow(pos,3);\n          return 0.5 * (Math.pow((pos-2),3) + 2);\n        };\n\n    function animate() {\n      var progress = currentIteration / iterations, \n          value = change * easing(progress) + start;\n      // console.log(progress + \", \" + value);\n      step(value, currentIteration);\n      currentIteration += 1;\n\n      if(progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    }\n    // start!\n    requestAnimationFrame(animate);\n  }\n\n\n\n  var Gauge = (function() {\n    var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n    var GaugeDefaults = {\n      centerX: 50,\n      centerY: 50\n    };\n\n    var defaultOptions = {\n      dialRadius: 40,\n      dialStartAngle: 135,\n      dialEndAngle: 45,\n      value: 0,\n      max: 100,\n      min: 0,\n      valueDialClass: \"value\",\n      valueClass: \"value-text\",\n      dialClass: \"dial\",\n      gaugeClass: \"gauge\",\n      showValue: true,\n      gaugeColor: null,\n      label: function(val) {return Math.round(val);}\n    };\n\n    function shallowCopy(/* source, ...targets*/) {\n      var target = arguments[0], sources = slice.call(arguments, 1);\n      sources.forEach(function(s) {\n        for(var k in s) {\n          if(s.hasOwnProperty(k)) {\n            target[k] = s[k];\n          }\n        }\n      });\n      return target;\n    }\n\n    /**\n     * A utility function to create SVG dom tree\n     * @param {String} name The SVG element name\n     * @param {Object} attrs The attributes as they appear in DOM e.g. stroke-width and not strokeWidth\n     * @param {Array} children An array of children (can be created by this same function)\n     * @return The SVG element\n     */\n    function svg(name, attrs, children) {\n      var elem = document.createElementNS(SVG_NS, name);\n      for(var attrName in attrs) {\n        elem.setAttribute(attrName, attrs[attrName]);\n      }\n\n      if(children) {\n        children.forEach(function(c) {\n          elem.appendChild(c);\n        });\n      }\n      return elem;\n    }\n\n    /**\n     * Translates percentage value to angle. e.g. If gauge span angle is 180deg, then 50%\n     * will be 90deg\n     */\n    function getAngle(percentage, gaugeSpanAngle) {\n      return percentage * gaugeSpanAngle / 100;\n    }\n\n    function normalize(value, min, limit) {\n      var val = Number(value);\n      if(val > limit) return limit;\n      if(val < min) return min;\n      return val;\n    }\n\n    function getValueInPercentage(value, min, max) {\n      var newMax = max - min, newVal = value - min;\n      return 100 * newVal / newMax;\n      // var absMin = Math.abs(min);\n      // return 100 * (absMin + value) / (max + absMin);\n    }\n\n    /**\n     * Gets cartesian co-ordinates for a specified radius and angle (in degrees)\n     * @param cx {Number} The center x co-oriinate\n     * @param cy {Number} The center y co-ordinate\n     * @param radius {Number} The radius of the circle\n     * @param angle {Number} The angle in degrees\n     * @return An object with x,y co-ordinates\n     */\n    function getCartesian(cx, cy, radius, angle) {\n      var rad = angle * Math.PI / 180;\n      return {\n        x: Math.round((cx + radius * Math.cos(rad)) * 1000) / 1000,\n        y: Math.round((cy + radius * Math.sin(rad)) * 1000) / 1000\n      };\n    }\n\n    // Returns start and end points for dial\n    // i.e. starts at 135deg ends at 45deg with large arc flag\n    // REMEMBER!! angle=0 starts on X axis and then increases clockwise\n    function getDialCoords(radius, startAngle, endAngle) {\n      var cx = GaugeDefaults.centerX,\n          cy = GaugeDefaults.centerY;\n      return {\n        end: getCartesian(cx, cy, radius, endAngle),\n      \tstart: getCartesian(cx, cy, radius, startAngle)\n      };\n    }\n\n    /**\n     * Creates a Gauge object. This should be called without the 'new' operator. Various options\n     * can be passed for the gauge:\n     * {\n     *    dialStartAngle: The angle to start the dial. MUST be greater than dialEndAngle. Default 135deg\n     *    dialEndAngle: The angle to end the dial. Default 45deg\n     *    dialRadius: The gauge's radius. Default 400\n     *    max: The maximum value of the gauge. Default 100\n     *    value: The starting value of the gauge. Default 0\n     *    label: The function on how to render the center label (Should return a value)\n     * }\n     * @param {Element} elem The DOM into which to render the gauge\n     * @param {Object} opts The gauge options\n     * @return a Gauge object\n     */\n    return function Gauge(elem, opts) {\n      opts = shallowCopy({}, defaultOptions, opts);\n      var gaugeContainer = elem,\n          limit = opts.max,\n          min = opts.min,\n          value = normalize(opts.value, min, limit),\n          radius = opts.dialRadius,\n          displayValue = opts.showValue,\n          startAngle = opts.dialStartAngle,\n          endAngle = opts.dialEndAngle,\n          valueDialClass = opts.valueDialClass,\n          valueTextClass = opts.valueClass,\n          valueLabelClass = opts.valueLabelClass,\n          dialClass = opts.dialClass,\n          gaugeClass = opts.gaugeClass,\n          gaugeColor = opts.color,\n          gaugeValueElem,\n          gaugeValuePath,\n          label = opts.label,\n          viewBox = opts.viewBox,\n          instance;\n\n      if(startAngle < endAngle) {\n        console.log(\"WARN! startAngle < endAngle, Swapping\");\n        var tmp = startAngle;\n        startAngle = endAngle;\n        endAngle = tmp;\n      }\n\n      function pathString(radius, startAngle, endAngle, largeArc) {\n        var coords = getDialCoords(radius, startAngle, endAngle),\n            start = coords.start,\n            end = coords.end,\n            largeArcFlag = typeof(largeArc) === \"undefined\" ? 1 : largeArc;\n\n        return [\n          \"M\", start.x, start.y, \n          \"A\", radius, radius, 0, largeArcFlag, 1, end.x, end.y\n        ].join(\" \");\n      }\n\n      function initializeGauge(elem) {\n        gaugeValueElem = svg(\"text\", {\n          x: 50,\n          y: 50,\n          fill: \"#999\",\n          \"class\": valueTextClass,\n          \"font-size\": \"100%\",\n          \"font-family\": \"sans-serif\",\n          \"font-weight\": \"normal\",\n          \"text-anchor\": \"middle\",\n          \"alignment-baseline\": \"middle\",\n          \"dominant-baseline\": \"central\"\n        });\n\n        gaugeValuePath = svg(\"path\", {\n          \"class\": valueDialClass,\n          fill: \"none\",\n          stroke: \"#666\",\n          \"stroke-width\": 2.5,\n          d: pathString(radius, startAngle, startAngle) // value of 0\n        });\n\n        var angle = getAngle(100, 360 - Math.abs(startAngle - endAngle));\n        var flag = angle <= 180 ? 0 : 1;\n        var gaugeElement = svg(\"svg\", {\"viewBox\": viewBox || \"0 0 100 100\", \"class\": gaugeClass}, [\n          svg(\"path\", {\n            \"class\": dialClass,\n            fill: \"none\",\n            stroke: \"#eee\",\n            \"stroke-width\": 2,\n            d: pathString(radius, startAngle, endAngle, flag)\n          }),\n          svg(\"g\", { \"class\": \"text-container\" }, [gaugeValueElem]),\n          gaugeValuePath\n        ]);\n        elem.appendChild(gaugeElement);\n      }\n\n      function updateGauge(theValue, frame) {\n        var val = getValueInPercentage(theValue, min, limit),\n            // angle = getAngle(val, 360 - Math.abs(endAngle - startAngle)),\n            angle = getAngle(val, 360 - Math.abs(startAngle - endAngle)),\n            // this is because we are using arc greater than 180deg\n            flag = angle <= 180 ? 0 : 1;\n        if(displayValue) {\n          gaugeValueElem.textContent = label.call(opts, theValue);\n        }\n        gaugeValuePath.setAttribute(\"d\", pathString(radius, startAngle, angle + startAngle, flag));\n      }\n\n      function setGaugeColor(value, duration) {        \n        var c = gaugeColor.call(opts, value), \n            dur = duration * 1000,\n            pathTransition = \"stroke \" + dur + \"ms ease\";\n            // textTransition = \"fill \" + dur + \"ms ease\";\n\n        gaugeValuePath.style.stroke = c;\n        gaugeValuePath.style[\"-webkit-transition\"] = pathTransition;\n        gaugeValuePath.style[\"-moz-transition\"] = pathTransition;\n        gaugeValuePath.style.transition = pathTransition;\n        /*\n        gaugeValueElem.style = [\n          \"fill: \" + c,\n          \"-webkit-transition: \" + textTransition,\n          \"-moz-transition: \" + textTransition,\n          \"transition: \" + textTransition,\n        ].join(\";\");\n        */\n      }\n\n      instance = {\n        setMaxValue: function(max) {\n          limit = max;\n          updateGauge(value);\n        },\n        setValue: function(val) {\n          value = normalize(val, min, limit);\n          if(gaugeColor) {\n            setGaugeColor(value, 0)\n          }\n          updateGauge(value);\n        },\n        setValueAnimated: function(val, duration) {\n        \tvar oldVal = value;\n          value = normalize(val, min, limit);\n          if(oldVal === value) {\n            return;\n          }\n\n          if(gaugeColor) {\n            setGaugeColor(value, duration);\n          }\n          Animation({\n            start: oldVal || 0,\n            end: value,\n            duration: duration || 1,\n            step: function(val, frame) {\n              updateGauge(val, frame);\n            }\n          });\n        },\n        getValue: function() {\n          return value;\n        }\n      };\n\n      initializeGauge(gaugeContainer);\n      instance.setValue(value);\n      return instance;\n    };\n  })();\n\n  return Gauge;\n});\n","module.exports = require(\"./src/gauge\");\n","import { html, css, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport SvgGauge, { GaugeInstance } from 'svg-gauge';\n\n// TODO: Could use an upgrade. Maybe something like this? https://d3gaugechart.mxapps.io/\nexport default class Gauge extends LitElement {\n  @property({ type: Number }) min = 0;\n  @property({ type: Number }) max = 100;\n  @property({ type: Number }) value = 0;\n\n  @query('#gauge') gaugeElement!: HTMLElement;\n  gauge?: GaugeInstance;\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      width: 200px;\n      height: 200px;\n    }\n\n    .gauge-container-container {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .gauge-container {\n      display: block;\n    }\n\n    .gauge-container > .gauge > .dial {\n      stroke: #ddd;\n      stroke-width: 3;\n      fill: rgba(0, 0, 0, 0);\n      stroke: var(--frc-gauge-color, rgb(221, 221, 221));\n    }\n    .gauge-container > .gauge > .value {\n      stroke: var(--frc-gauge-fill-color, rgb(47, 180, 200));\n      stroke-width: 3;\n      fill: rgba(0, 0, 0, 0);\n    }\n    .gauge-container > .gauge .value-text {\n      fill: var(--frc-gauge-text-color, rgb(100, 100, 100));\n      font-family: sans-serif;\n      font-size: 1em;\n    }\n  `;\n\n  setSize() {\n    const rect = this.getBoundingClientRect();\n    const svgWidth = rect.width;\n    const svgHeight = rect.height;\n\n    const size = Math.min(svgWidth, svgHeight);\n    this.gaugeElement.style.width = `${size}px`;\n  }\n\n  gaugeInit() {\n    this.gaugeElement.innerHTML = '';\n    this.gauge = SvgGauge(this.gaugeElement, {\n      min: Math.min(this.min, this.max),\n      max: Math.max(this.min, this.max),\n    });\n    this.setSize();\n  }\n\n  firstUpdated() {\n    this.gaugeInit();\n    const resizeObserver = new ResizeObserver(() => this.setSize());\n    resizeObserver.observe(this);\n  }\n\n  updated(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('min') || changedProperties.has('max')) {\n      this.gaugeInit();\n    }\n    this.gauge?.setValue(this.value);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return html`\n      <div class=\"gauge-container-container\">\n        <div id=\"gauge\" class=\"gauge-container\"></div>\n      </div>\n    `;\n  }\n}\n\nif (!customElements.get('frc-gauge')) {\n  customElements.define('frc-gauge', Gauge);\n}\n"],"names":["global","factory","Gauge","module","this","undefined","document","slice","requestAnimationFrame","cb","Animation","options","duration","currentIteration","iterations","start","end","change","step","easing","pos","animate","progress","value","SVG_NS","GaugeDefaults","defaultOptions","val","shallowCopy","target","sources","s","k","svg","name","attrs","children","elem","attrName","c","getAngle","percentage","gaugeSpanAngle","normalize","min","limit","getValueInPercentage","max","newMax","newVal","getCartesian","cx","cy","radius","angle","rad","getDialCoords","startAngle","endAngle","opts","gaugeContainer","displayValue","valueDialClass","valueTextClass","dialClass","gaugeClass","gaugeColor","gaugeValueElem","gaugeValuePath","label","viewBox","instance","tmp","pathString","largeArc","coords","largeArcFlag","initializeGauge","flag","gaugeElement","updateGauge","theValue","frame","setGaugeColor","dur","pathTransition","oldVal","require$$0","LitElement","rect","svgWidth","svgHeight","size","SvgGauge","changedProperties","_a","html","css","__decorateClass","property","query"],"mappings":"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","x_google_ignoreList":[0,1]}