{"version":3,"file":"Logger.stories-9affeede.js","sources":["../../src/components/logger/html-logger.js","../../src/components/logger/index.ts"],"sourcesContent":["/**\r\n * https://github.com/b1tdust/html-logger\r\n */\r\n\r\nconst levels = {\r\n  info: {\r\n    color: '#fff',\r\n    name: 'INFO',\r\n    level: 1,\r\n  },\r\n  debug: {\r\n    color: '#fff',\r\n    name: 'DEBUG',\r\n    level: 0,\r\n  },\r\n  fatal: {\r\n    color: '#FF3E3E',\r\n    name: 'ERROR',\r\n    level: 4,\r\n  },\r\n  warning: {\r\n    color: '#FFC53E',\r\n    name: 'WARNING',\r\n    level: 3,\r\n  },\r\n  success: {\r\n    color: '#3EFF45',\r\n    name: 'SUCCESS',\r\n    level: 2,\r\n  },\r\n};\r\n\r\nconst defaultOptions = {\r\n  name: 'Html Logger',\r\n  enabled: true,\r\n  maxLogCount: 1000,\r\n  loggingFormat: '[MESSAGE]', //\"[LEVEL] [MESSAGE]\",\r\n  argumentsSeparator: ' ',\r\n  utcTime: false,\r\n  level: 0,\r\n};\r\n\r\n// Babel.io Object.assign\r\nvar _extend = function _extend(target) {\r\n  var sources = [].slice.call(arguments, 1);\r\n\r\n  sources.forEach(function (source) {\r\n    for (var prop in source) {\r\n      target[prop] = source[prop];\r\n    }\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\nexport default class HtmlLogger {\r\n  constructor(options, parent = document.body) {\r\n    this.options = _extend({}, defaultOptions, options || {});\r\n    this.parent = parent;\r\n    this.linesCount = 0;\r\n    this.$ = {};\r\n    this.initialized = false;\r\n  }\r\n\r\n  init() {\r\n    if (this.initialized) return;\r\n    if (\r\n      !document ||\r\n      !document.createElement ||\r\n      !document.body ||\r\n      !document.body.appendChild\r\n    )\r\n      throw new Error('HtmlLogger not initialized');\r\n\r\n    this.$.container = document.createElement('div');\r\n    const containerStyle = `width:100%; height: 100%;\r\n\t\t\t\t\tmargin:0;\r\n\t\t\t\t\tleft:0;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.8);\r\n\t\t\t\t\toverflow:auto;\r\n\t\t\t\t\tpadding: 5px 7px;\r\n    \t\t\tbox-sizing: border-box;`;\r\n    this.$.container.setAttribute('style', containerStyle);\r\n\r\n    this.$.log = document.createElement('div');\r\n\r\n    const span = document.createElement('span');\r\n    span.style.color = '#afa';\r\n    span.style.fontWeight = 'bold';\r\n    const title = `===== ${this.options.name} - Logger started at ${\r\n      this.options.utcTime ? new Date().toUTCString() : new Date()\r\n    } =====`;\r\n    span.appendChild(document.createTextNode(title));\r\n\r\n    const info = document.createElement('div');\r\n    //info.setAttribute('style', \"background:rgba(0, 0, 0, 0.8) \")\r\n    info.appendChild(span);\r\n\r\n    info.appendChild(document.createElement('br'));\r\n    info.appendChild(document.createElement('br'));\r\n\r\n    this.$.container.appendChild(info);\r\n    this.$.container.appendChild(this.$.log);\r\n    this.parent.appendChild(this.$.container);\r\n    this.initialized = true;\r\n  }\r\n\r\n  setLevel(level) {\r\n    this.options.level = level;\r\n  }\r\n\r\n  setEnable(enable = true) {\r\n    if (!this.initialized) return;\r\n\r\n    this.options.enabled = enable;\r\n    this.$.log.style.color = enable ? '#fff' : '#444';\r\n  }\r\n\r\n  /**\r\n   * Removes all lines from the view\r\n   * @memberOf HtmlLogger\r\n   */\r\n  clean() {\r\n    if (!this.initialized) return;\r\n\r\n    while (this.$.log.firstChild) {\r\n      this.$.log.removeChild(this.$.log.firstChild);\r\n    }\r\n\r\n    this.linesCount = 0;\r\n  }\r\n\r\n  /**\r\n   * prints message. default level is [info].\r\n   * @param {String} msg - message to print\r\n   * @param {String} [hexColor=levels.info.color] - hexcolor text\r\n   * @param {String} [level=levels.info.name] - level suffix\r\n   *\r\n   * @memberOf HtmlLogger\r\n   */\r\n  print(msg, hexColor = levels.info.color, level = levels.info.name) {\r\n    if (!this.initialized || !this.options.enabled) return;\r\n\r\n    const scrollToBottom =\r\n      this.$.container.scrollTop >\r\n      this.$.container.scrollHeight - this.$.container.clientHeight - 5;\r\n\r\n    let message = msg.length ? msg : '[empty]';\r\n\r\n    const lines = message.split(/\\r\\n|\\r|\\n/);\r\n    for (let i = 0; i < lines.length; i++) {\r\n      let timeElement = document.createElement('div');\r\n      timeElement.setAttribute('style', 'color:#999;float:left;');\r\n      let time = this._getTime();\r\n      timeElement.appendChild(document.createTextNode(`${time}\\u00a0`));\r\n\r\n      let messageLine = this.options.loggingFormat\r\n        .replace('[LEVEL]', level)\r\n        .replace('[MESSAGE]', lines[i]); // `${time} ${level} ${lines[i]}`)\r\n      let msgContainer = document.createElement('div');\r\n      msgContainer.setAttribute(\r\n        'style',\r\n        `word-wrap:break-word;margin-left:6.0em;color: ${hexColor}`\r\n      );\r\n      msgContainer.appendChild(document.createTextNode(messageLine));\r\n\r\n      let newLineDiv = document.createElement('div');\r\n      newLineDiv.setAttribute('style', 'clear:both;');\r\n\r\n      var lineContainer = document.createElement('div');\r\n      lineContainer.appendChild(timeElement);\r\n      lineContainer.appendChild(msgContainer);\r\n      lineContainer.appendChild(newLineDiv);\r\n\r\n      this.$.log.appendChild(lineContainer);\r\n      this.linesCount++;\r\n\r\n      while (this.linesCount > this.options.maxLogCount) {\r\n        this.$.log.childNodes[0].remove();\r\n        this.linesCount--;\r\n      }\r\n\r\n      if (scrollToBottom) {\r\n        this.$.container.scrollTop = this.$.container.scrollHeight;\r\n      }\r\n    }\r\n  }\r\n\r\n  info() {\r\n    if (this.options.level <= levels.info.level)\r\n      this.print(\r\n        [].map\r\n          .call(arguments, this._determineString)\r\n          .join(this.options.argumentsSeparator)\r\n      );\r\n  }\r\n\r\n  debug() {\r\n    if (this.options.level <= levels.debug.level)\r\n      this.print(\r\n        [].map\r\n          .call(arguments, this._determineString)\r\n          .join(this.options.argumentsSeparator),\r\n        levels.debug.color,\r\n        levels.debug.name\r\n      );\r\n  }\r\n\r\n  warning() {\r\n    if (this.options.level <= levels.warning.level)\r\n      this.print(\r\n        [].map\r\n          .call(arguments, this._determineString)\r\n          .join(this.options.argumentsSeparator),\r\n        levels.warning.color,\r\n        levels.warning.name\r\n      );\r\n  }\r\n\r\n  success() {\r\n    if (this.options.level <= levels.success.level)\r\n      this.print(\r\n        [].map\r\n          .call(arguments, this._determineString)\r\n          .join(this.options.argumentsSeparator),\r\n        levels.success.color,\r\n        levels.success.name\r\n      );\r\n  }\r\n\r\n  error() {\r\n    if (this.options.level <= levels.fatal.level)\r\n      this.print(\r\n        [].map\r\n          .call(arguments, this._determineString)\r\n          .join(this.options.argumentsSeparator),\r\n        levels.fatal.color,\r\n        levels.fatal.name\r\n      );\r\n  }\r\n\r\n  _getTime() {\r\n    return (\r\n      this.options.utcTime ? new Date().toUTCString() : new Date().toString()\r\n    ).match(/([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]/)[0];\r\n  }\r\n\r\n  _determineString(object) {\r\n    if (object === undefined) return 'undefined';\r\n    if (object === null) return 'null';\r\n    if (object instanceof Array) return JSON.stringify(object);\r\n    switch (typeof object) {\r\n      default:\r\n      case 'object':\r\n        return `${\r\n          object.constructor ? object.constructor.name : object.toString()\r\n        } -> ${JSON.stringify(object)}`;\r\n      case 'function':\r\n        return object.name || '[function]';\r\n      case 'number':\r\n      case 'string':\r\n      case 'boolean':\r\n        return object;\r\n    }\r\n  }\r\n}\r\n","import { html, css, LitElement } from 'lit';\r\nimport { property } from 'lit/decorators.js';\r\nimport HtmlLogger from './html-logger';\r\n\r\nexport default class Logger extends LitElement {\r\n  @property({ type: String }) title = 'Robot Logger';\r\n  @property({ type: Number, attribute: 'max-log-count' }) maxLogCount = 1000;\r\n  @property({ type: String }) debug = '';\r\n  @property({ type: String }) info = '';\r\n  @property({ type: String }) success = '';\r\n  @property({ type: String }) warning = '';\r\n  @property({ type: String }) error = '';\r\n  @property({ type: String }) level = 'info';\r\n  @property({ type: Boolean }) disabled = false;\r\n\r\n  logger!: HtmlLogger;\r\n  levels = ['debug', 'info', 'success', 'warning', 'error'];\r\n\r\n  static styles = css`\r\n    :host {\r\n      display: inline-block;\r\n      width: 500px;\r\n      height: 400px;\r\n      font-family: monospace;\r\n      font-size: 14px;\r\n    }\r\n\r\n    [part='logger'] {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `;\r\n\r\n  firstUpdated() {\r\n    const loggerElement = this.renderRoot.querySelector(\r\n      '[part=logger]'\r\n    ) as HTMLElement;\r\n    this.logger = new HtmlLogger(\r\n      {\r\n        name: this.title,\r\n        maxLogCount: Math.max(0, this.maxLogCount),\r\n        level: this.levels.indexOf(this.level),\r\n        enabled: !this.disabled,\r\n      },\r\n      loggerElement\r\n    );\r\n    this.logger.init();\r\n  }\r\n\r\n  updated(changedProperties: Map<string, unknown>) {\r\n    this.levels.forEach((level) => {\r\n      if (changedProperties.has(level) && (this as any)[level]) {\r\n        (this.logger as any)[level]((this as any)[level]);\r\n      }\r\n    });\r\n\r\n    if (changedProperties.has('maxLogCount')) {\r\n      this.logger.options.maxLogCount = Math.max(0, this.maxLogCount);\r\n    }\r\n\r\n    if (changedProperties.has('level')) {\r\n      this.logger.setLevel(this.levels.indexOf(this.level));\r\n    }\r\n\r\n    if (changedProperties.has('disabled')) {\r\n      this.logger.setEnable(!this.disabled);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  render() {\r\n    return html` <div part=\"logger\"></div> `;\r\n  }\r\n}\r\n\r\nif (!customElements.get('frc-logger')) {\r\n  customElements.define('frc-logger', Logger);\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'frc-logger': Logger;\r\n  }\r\n}\r\n"],"names":["levels","defaultOptions","_extend","target","sources","source","prop","HtmlLogger","options","parent","containerStyle","span","title","info","level","enable","msg","hexColor","scrollToBottom","lines","i","timeElement","time","messageLine","msgContainer","newLineDiv","lineContainer","object","Logger","LitElement","loggerElement","changedProperties","html","css","__decorateClass","property"],"mappings":"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"}