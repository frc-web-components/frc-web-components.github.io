{"version":3,"file":"index-0665b33f.js","sources":["../../src/components/axis/index.ts"],"sourcesContent":["import { html, css, LitElement } from 'lit';\r\nimport { property, state, query } from 'lit/decorators.js';\r\nimport { select } from 'd3';\r\n\r\nexport default class Axis extends LitElement {\r\n  @property({ type: Boolean }) vertical = false;\r\n  @property({ type: Number }) ticks = 5;\r\n  @property({ type: Number }) min = -1;\r\n  @property({ type: Number }) max = 1;\r\n  @property({ type: String }) unit = '';\r\n\r\n  @state() prevSize = 0;\r\n  @state() prevTicks = 0;\r\n  @state() prevMin: number | null = null;\r\n  @state() prevMax: number | null = null;\r\n\r\n  @query('#svg') svg!: HTMLElement;\r\n\r\n  static styles = css`\r\n    :host {\r\n      display: inline-block;\r\n      position: relative;\r\n    }\r\n\r\n    :host([vertical]) {\r\n      height: 100%;\r\n    }\r\n\r\n    :host(:not([vertical])) {\r\n      width: 100%;\r\n    }\r\n\r\n    svg {\r\n      overflow: visible;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n\r\n    line {\r\n      stroke: rgb(150, 150, 150);\r\n      stroke-width: 2;\r\n    }\r\n\r\n    text {\r\n      font-weight: normal;\r\n      font-size: 13px;\r\n      fill: var(--frc-axis-text-color, #000);\r\n    }\r\n  `;\r\n\r\n  setAxis(changedProps: Map<string, unknown>) {\r\n    const size = this.vertical ? this.clientHeight : this.clientWidth;\r\n    const tickSpacing = size / Math.max(1, this.ticks - 1);\r\n    const width = 30;\r\n    const { min, max } = this;\r\n\r\n    let lastTickWithText = -Infinity;\r\n    let textEnd = -Infinity;\r\n\r\n    // Prevent update if nothing has changed\r\n    if (\r\n      this.prevSize === size &&\r\n      this.prevTicks === this.ticks &&\r\n      this.prevMin === min &&\r\n      this.prevMax === max &&\r\n      !changedProps.has('unit') &&\r\n      !changedProps.has('vertical')\r\n    ) {\r\n      return;\r\n    }\r\n    this.prevSize = size;\r\n    this.prevTicks = this.ticks;\r\n    this.prevMin = min;\r\n    this.prevMax = max;\r\n\r\n    this.svg.innerHTML = '';\r\n\r\n    const svg = select(this.svg)\r\n      .attr('width', !this.vertical ? size : width)\r\n      .attr('height', !this.vertical ? width : size);\r\n\r\n    for (let i = 0; i < this.ticks; i += 1) {\r\n      if (!this.vertical) {\r\n        svg\r\n          .append('line')\r\n          .attr('x1', i * tickSpacing)\r\n          .attr('y1', 0)\r\n          .attr('x2', i * tickSpacing)\r\n          .attr('y2', 8);\r\n      } else {\r\n        svg\r\n          .append('line')\r\n          .attr('x1', 0)\r\n          .attr('y1', i * tickSpacing)\r\n          .attr('x2', 8)\r\n          .attr('y2', i * tickSpacing);\r\n      }\r\n\r\n      if (!this.vertical) {\r\n        // check to see if text will fit\r\n        const spaceBetweenTicks = (i - lastTickWithText) * tickSpacing;\r\n        const pointWhereNewTextCanBegin =\r\n          lastTickWithText * tickSpacing + spaceBetweenTicks * 0.4;\r\n        const textWillFit = textEnd < 0 || pointWhereNewTextCanBegin > textEnd;\r\n\r\n        if (textWillFit) {\r\n          const value = min + (i * (max - min)) / Math.max(this.ticks - 1, 1);\r\n\r\n          const textEl = svg\r\n            .append('text')\r\n            .attr('x', i * tickSpacing)\r\n            .attr('y', 25)\r\n            .attr('text-anchor', 'middle')\r\n            .text(value.toFixed(2) + (this.unit ? ` ${this.unit}` : ''));\r\n\r\n          textEnd = i * tickSpacing + (textEl.node()?.getBBox().width ?? 0) / 2;\r\n          lastTickWithText = i;\r\n        }\r\n      } else {\r\n        const value = min + (i * (max - min)) / Math.max(this.ticks - 1, 1);\r\n\r\n        svg\r\n          .append('text')\r\n          .attr('x', -3)\r\n          .attr('y', i * tickSpacing + 4)\r\n          .attr('text-anchor', 'end')\r\n          .text(value.toFixed(2) + (this.unit ? ` ${this.unit}` : ''));\r\n      }\r\n\r\n      // don't do this for last tick\r\n      if (i < this.ticks - 1) {\r\n        for (let j = 1; j < 4; j += 1) {\r\n          if (!this.vertical) {\r\n            svg\r\n              .append('line')\r\n              .attr('x1', i * tickSpacing + (j * tickSpacing) / 4)\r\n              .attr('y1', 0)\r\n              .attr('x2', i * tickSpacing + (j * tickSpacing) / 4)\r\n              .attr('y2', 4);\r\n          } else {\r\n            svg\r\n              .append('line')\r\n              .attr('x1', 4)\r\n              .attr('y1', i * tickSpacing + (j * tickSpacing) / 4)\r\n              .attr('x2', 8)\r\n              .attr('y2', i * tickSpacing + (j * tickSpacing) / 4);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      this.requestUpdate();\r\n    });\r\n    resizeObserver.observe(this);\r\n  }\r\n\r\n  updated(changedProps: Map<string, unknown>) {\r\n    console.log('changedProps:', changedProps);\r\n    this.setAxis(changedProps);\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  render() {\r\n    return html` <svg id=\"svg\"></svg> `;\r\n  }\r\n}\r\n\r\nif (!customElements.get('frc-axis')) {\r\n  customElements.define('frc-axis', Axis);\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'frc-axis': Axis;\r\n  }\r\n}\r\n"],"names":["Axis","LitElement","changedProps","size","tickSpacing","width","min","max","lastTickWithText","textEnd","svg","select","i","value","spaceBetweenTicks","pointWhereNewTextCanBegin","textEl","_a","j","html","css","__decorateClass","property","state","query"],"mappings":"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"}